name: CI

on: 
  workflow_dispatch:
    inputs:
      version:
        description: version
        required: true
        type: string
jobs:
  build_windows:
    runs-on: ubuntu-22.04
    steps:
      - name: packages
        run: |
          sudo apt-get update
          sudo apt-get install git g++ make imagemagick xclip libsdl1.2-dev libglu1-mesa-dev libgl1-mesa-dev g++-mingw-w64-i686-win32 libfreetype-dev
      - name: update translation
        run: curl -d "" -L https://script.google.com/macros/s/AKfycbx0agAIW99KUpLdLQX1ghFaMu81uopoQ7zNqHe7s3D5gWIZO8cb7tLRTGV8Gb8F4saC/exec # empty POST request
      - name: scripts
        run: |
          wget https://raw.githubusercontent.com/skps2010/OneLife/master/scripts/skps2010Scripts/skps2010Build.sh
          chmod +x skps2010Build.sh
          ./skps2010Build.sh pull_only
          
          cd OneLife
          git config --global pull.rebase false
          git config --global user.email "skps2010030908@yahoo.com"
          git config --global user.name "skps2010"
          git pull https://github.com/jasonrohrer/OneLife
          git push https://${{ secrets.PAT }}@github.com/skps2010/OneLife.git
          cd ../

          cd minorGems
          git pull https://github.com/jasonrohrer/minorGems
          git push https://${{ secrets.PAT }}@github.com/skps2010/minorGems.git
          cd ../

          ./makeWindows.sh ${{ inputs.version }}
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          release_name: v${{ inputs.version }}
          body: |
            Update to v${{ inputs.version }}.

            This is for One Hour One Life v${{ inputs.version }}.
            How to install: https://github.com/skps2010/OneLife/#how-to-use
            
            升級到 v${{ inputs.version }}。
            
            這對應到 One Hour One Life v${{ inputs.version }}。
            如何安裝：
            https://github.com/skps2010/OneLife/#如何使用正體
            https://github.com/skps2010/OneLife/#如何使用简体
      - name: upload windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: OneLife_Windows_v${{ inputs.version }}.zip
          asset_name: OneLife_Windows_v${{ inputs.version }}.zip
          asset_content_type: application/zip
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build_windows_zh_cn:
    needs: build_windows
    runs-on: windows-2022
    steps:
      - name: scripts
        shell: cmd
        run: |
          set PYTHONUTF8=1
          set version=${{ inputs.version }}

          curl --silent -L -o OneLife_Windows_v%version%.zip https://github.com/skps2010/OneLife/releases/download/v%version%/OneLife_Windows_v%version%.zip
          tar -xf OneLife_Windows_v%version%.zip
          
          (echo 2 && echo 1) | OneLife_v%version%\translator.exe
          
          curl --silent -o make_zh_cn.iss https://raw.githubusercontent.com/skps2010/OneLife/master/build/win32/make_zh_cn.iss
          curl --silent -o icon_installer.ico https://raw.githubusercontent.com/skps2010/OneLife/master/build/win32/icon_installer.ico
          
          curl --silent -o ChineseSimplified.isl https://raw.githubusercontent.com/kira-96/Inno-Setup-Chinese-Simplified-Translation/main/ChineseSimplified.isl
          copy ChineseSimplified.isl "c:\program files (x86)\inno setup 6\Languages"

          echo #define MyAppVersion "%version%" > work.iss
          type make_zh_cn.iss >> work.iss
          ISCC.exe work.iss
      - name: test dir
        run: |
          ls
      - name: upload windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build_windows.outputs.upload_url }}
          asset_path: OHOL_Simplified_Chinese_v${{ inputs.version }}.exe
          asset_name: OHOL_Simplified_Chinese_v${{ inputs.version }}.exe
          asset_content_type: application/zip
  build_macos:
    needs: build_windows
    runs-on: macos-13
    steps:
      - name: packages
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install sdl12-compat
          brew install ImageMagick
      - name: scripts
        run: |
          wget https://raw.githubusercontent.com/skps2010/OneLife/master/scripts/skps2010Scripts/skps2010Build.sh
          chmod +x skps2010Build.sh

          ./skps2010Build.sh pull_only
          ./makeMacOSX.sh ${{ inputs.version }}
      - name: upload macos #macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build_windows.outputs.upload_url }}
          asset_path: OneLife/build/mac/OneLife_MacOSX_v${{ inputs.version }}.zip
          asset_name: OneLife_MacOSX_v${{ inputs.version }}.zip
          asset_content_type: application/zip
